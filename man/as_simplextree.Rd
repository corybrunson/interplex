% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as-simplextree.r
\name{as_simplextree}
\alias{as_simplextree}
\alias{as_simplextree.default}
\alias{as_simplextree.Rcpp_SimplexTree}
\alias{as_simplextree.simplextree}
\alias{as_simplextree.igraph}
\alias{as_simplextree.network}
\title{Convert objects to class 'simplextree'}
\usage{
as_simplextree(x, ...)

\method{as_simplextree}{default}(x, ...)

\method{as_simplextree}{Rcpp_SimplexTree}(x, ...)

\method{as_simplextree}{simplextree}(x, ...)

\method{as_simplextree}{igraph}(x, index = NULL, ...)

\method{as_simplextree}{network}(x, index = NULL, ...)
}
\arguments{
\item{x}{An R object to be coerced. See Details.}

\item{...}{Additional arguments passed to methods.}

\item{index}{Integer-valued vertex attribute to be used as 0-simplex indices.
Ignored if \code{NULL} (the default).}
}
\value{
An object of class 'simplextree'.
}
\description{
This generic function...
}
\examples{
# convert a TDA filtration object
t <- 2 * pi * c(0, 1, 3, 6) / 7
rf <- TDA::ripsFiltration(
  cbind(x = cos(t), y = sin(t)),
  maxdimension = 2L, maxscale = 1.7
)
print(rf$cmplx)
st_rf <- as_simplextree(rf)
print(st_rf)
st_rf2 <- as_simplextree(rf$cmplx)
print(st_rf2)

# convert an igraph object
ig <- igraph::graph(c(1,2, 2,3, 1,3, 3,4))
print(ig)
st_ig <- as_simplextree(ig)
print(st_ig)

# specify 0-simplex indices
set.seed(0L)
ig <- igraph::set_vertex_attr(ig, "id", value = sample(igraph::vcount(ig)) + 1L)
igraph::V(ig)$id
igraph::as_edgelist(ig)
st_ig <- as_simplextree(ig, index = "id")
st_ig$vertices
st_ig$edges

# convert a network object
el <- data.frame(tails = c(1, 2, 1, 3), heads = c(2, 3, 3, 4))
nw <- network::network.edgelist(el, network::network.initialize(4))
print(nw)
st_nw <- as_simplextree(nw)
print(st_nw)
}
